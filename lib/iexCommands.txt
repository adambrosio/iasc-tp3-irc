#Test 1: Silencio de :escribiendo y de recibir mensaje del emisor
usuarios = []
server = IRCServer.start(usuarios)
pidClient1 = IRCClient.start
send pidClient1, {server, :connect, "usuario1"}
pidClient2 = IRCClient.start
send pidClient2, {server, :connect, "usuario2"}
send pidClient1, {pidClient2, :escribir, "Hola"}
send pidClient2, {pidClient1, :silenciar}
send pidClient1, {pidClient2, :escribir, "Hola"}

#Test 2: Silencio de :visto por el receptor
usuarios = []
server = IRCServer.start(usuarios)
pidClient1 = IRCClient.start
send pidClient1, {server, :connect, "usuario1"}
pidClient2 = IRCClient.start
send pidClient2, {server, :connect, "usuario2"}
send pidClient1, {pidClient2, :escribir, "Hola"}
send pidClient1, {pidClient2, :silenciar}
send pidClient1, {pidClient2, :escribir, "Hola"}


#Test 3: Broadcast
usuarios = []
server = IRCServer.start(usuarios)
pidClient1 = IRCClient.start
send pidClient1, {server, :connect, "usuario1"}
pidClient2 = IRCClient.start
send pidClient2, {server, :connect, "usuario2"}
pidClient3 = IRCClient.start
send pidClient3, {server, :connect, "usuario3"}
send pidClient1, {:escribir, "Hola"}
send pidClient2, {pidClient1, :silenciar}
send pidClient1, {:escribir, "Hola"}


#Test 3: Aviso de recepcion y lectura por separado
usuarios = []
server = IRCServer.start(usuarios)
pidClient1 = IRCClient.start
send pidClient1, {server, :connect, "usuario1"}
pidClient2 = IRCClient.start
send pidClient2, {server, :connect, "usuario2"}
pidClient3 = IRCClient.start
send pidClient3, {server, :connect, "usuario3"}
send pidClient1, {:escribir, "Hola"}
send pidClient2, {pidClient1, :silenciar}
send pidClient1, {:escribir, "Hola"}
